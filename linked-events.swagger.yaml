---
swagger: '2.0'

info:
  title: Linked Events information API
  description: |-
      Linked Events provides categorized data on events and places using JSON-LD format.

      Events can be searched by date and location. Location can be exact address or larger
      area such as neighbourhood or burgh

      JSON-LD format is simplified using include mechanism. API users can request that certain
      fields are included directly into the result, instead of being hyperlinks to objects.

      Several fields are multilingual. These are implemented as object with each language variant
      as property. In this specification each multilingual field has (fi,sv,en) property triplet as
      example.

  termsOfService: (depends on data provider)
  version: 0.0.1
  
host: api.hel.fi
basePath: /linkedevents/v0.1

schemes:
  - http
  
produces:
  - application/json

parameters:
  page_param:
    name: page
    in: query
    description: request particular page in paginated results
    required: false
    type: integer
  pagesize_param:
    name: page_size
    in: query
    description: request that server delivers page_size results in response
    required: false
    type: integer

definitions:

  meta_definition:
    title: Meta
    description: Meta record describing paginition usw.
    type: object
    properties:
      count:
        description: Total amount of items found
        type: integer
      next:
        description: URL for the next page of items
        type: string
        format: url
      previous:
        description: URL for the previous page of items
        type: string
        format: url

  place:
    type: object
    title: Place
    description: Places describe physical locations for events and means for contacting people responsible for these locations. Place definitions come from organizations publishing events (field "publisher") and can thus be slightly different between places sourced from different organizations.
    properties:
      id:
        type: string
        description: Consists of source prefix and source specific identifier
      custom_data:
        type: string
        description: Key value field for custom data. FIXME: is there 6Aika-wide use case for this?
      name:
        type: object
        description: Name of the place, multilingual
        properties:
          fi:
            type: string
            description: place name in Finnish
          sv:
            type: string
            description: place name in Swedish
          en:
            type: string
            description: place name in English
      image:
        type: string
        description: URL to image illustrating the event (FIXME, this will be changed to an object including caption and image URL)
      origin_id:
        type: string
        description: Place identifier in the originating system, format: registy_identifier:place_identifier.
      created_time:
        type: string
        format: date-time
        description: Creation time for the place entry. FIXME: is there any use case for this? It's mostly null
      last_modified_time:
        type: string
        format: date-time
        description: ''
      # No examples of the translated representation, probably same as with other multilingual fields.
      info_url:
        description: Link (URL) to a page with more information about place
        type: object
        properties:
          fi:
            description: Link to Finnish page
            type: string
            format: url
          se:
            description: Link to Swedish page
            type: string
            format: url
          en:
            description: Link to English page
            type: string
            format: url
      description:
        description: Short (? FIXME: perhaps specify recommendation) description of the place, multilingual.
        type: object
        properties:
          fi:
            type: string
            description: place description in Finnish
          sv:
            type: string
            description: place description in Swedish
          en:
            type: string
            description: place description in English
      position:
        description: geographic position of the place specified using subset of GeoJSON
        type: object
        properties:
          coordinates:
            description: coordinates in format specified by type property
            type: array
            items:
              type: number
          type:
            description: interpretation of the coordinates property. Only point is supported in this version
            type: string
            enum:
            - Point
      email:
        type: string
        description: Contact email for the place, note that this is NOT multilingual
      telephone:
        type: object
        description: Contact phone number for the event, multilingual
        properties:
          fi:
            type: string
            description: phone number for Finnish speakers
          sv:
            type: string
            description: phone number for Swedish speakers
          en:
            type: string
            description: phone number for English speakers
      contact_type:
        type: string
        description: FIXME: this seems unused in Helsinki data. Does any 6Aika city have use for describing contact type?
      street_address:
        description: Street address for the place, multilingual
        type: object
        properties:
          fi:
            type: string
            description: address in Finnish
          sv:
            type: string
            description: address in Swedish
          en:
            type: string
            description: address in English
      address_locality:
        description: Describes where the address is located, typically this would be name of the city
        type: object
        properties:
          fi:
            type: string
            description: locality in Finnish
          sv:
            type: string
            description: locality in Swedish
          en:
            type: string
            description: locality in English
      address_region:
        type: string
        description: FIXME ask Juha!
      postal_code:
        type: string
        description: Postal code of the location (as used by traditional mail)
      post_office_box_num:
        type: string
        description: PO box for traditional mail, in case mail is not delivered to the building
      address_country:
        type: string
        description: Country for the place, NOT multilingual
      deleted:
        type: boolean
        description: This place entry is not used anymore, but old events still reference it. This might be because of duplicate removal.
      data_source:
        type: string
        description: Identifies the source for data, this is specific to API provider. This is useful for API users, as any data quality issues are likely to be specific to data source and workarounds can be applied as such.
      publisher:
        type: string
        description: Organization that provided the event that this place is associated with
      parent:
        type: string
        description: ''

  keyword:
    title: Keyword
    description: Keywords are used to describe events. Linked events uses namespaced keywords in order to support having events from different sources. Namespaces are needed because keywords are defined by the organization sourcing the events and can therefore overlap in meaning. Conversely the meaning of same keyword can vary between organizations. Organization sourcing the keyword can be identified by data_source field. Data_source field will later specify standardized namespaces as well.
    type: object
    required:
    - id
    - name
    - data_source
    properties:
      id:
        type: string
        description: Consists of source prefix and source specific identifier
      name:
        type: object
        properties:
          fi:
            type: string
            description: Keyword in Finnish
          sv:
            type: string
            description: Keyword in Swedish
          en:
            type: string
            description: Keyword in English
      image:
        type: string
        description: FIXME(verify) An evocative image for the keyword
      origin_id:
        type: string
        description: Identifier for the keyword in the organization using this keyword. For standardized namespaces this will be a shared identifier.
      created_time:
        type: string
        format: date-time
        description: FIXME(missing)
      last_modified_time:
        type: string
        format: date-time
        description: FIXME(missing)
      aggregate:
        type: boolean
        description: FIXME(verify) This keyword is an combination of several keywords at source
      data_source:
        type: string
        description: Source of the keyword, typically API provider specific identifier. Will also be used to specify standardized namespaces as they are brought into use.
      created_by:
        type: string
        description: FIXME(missing)
      last_modified_by:
        type: string
        description: FIXME(missing)
      alt_labels:
        type: array
        items:
          type: string
        description: FIXME(verify) alternative labels for this keyword, no language specified

  language:
    title: Languages supported in this API
    type: object
    description: Primary purpose of this endpoint is to allow users to identify which languages are supported for multilingual fields. It also has translations for the names of the languages.
    properties:
      id:
        type: string
        description: Identifier for the language (typically ISO639-1)
      name:
        type: object
        description: Translation for the language name. Properties shown here are examples, it is suggested that every language supported has its name translated to every other language. Users of the API cannot rely on any translations being present.
        properties:
          fi:
            description: Name of the language in Finnish
            type: string
          se:
            description: Name of the language in Swedish
            type: string
          en:
            description: Name of the language in English
            type: string

  event:
    title: Events
    type: object
    description: 'Describes the actual events. Linked events API supports organizing events into hierarchies. This is implemented with collection events called "super events". Super events are normal event objects, that reference contained events in "sub_events" property. Currently there are two major use cases: events such as "Helsinki Festival", which consist of unique events over a span of time and recurring events such as theatrical productions with multiple showings. It is implementation dependent how the grouping of events is done. It should be noted that grouping might be automatic based on eg. event name and thus group unrelated events together and miss related events. Users of data are advised to prepare for this.'
    properties:
      id:
        description: consists of source prefix and source specific identifier
        type: string
        readOnly: true
      location:
        description: structured location identifier, references location object
        type: string
        readOnly: true
      keywords:
        description: array of keyword uri references
        type: array
        items:
          type: string
        readOnly: true
      super_event:
        description: references the aggregate event containing this event
        type: string
        readOnly: true
      event_status:
        type: string
        description: ''
      external_links:
        type: array
        items:
          "$ref": '#/definitions/eventlink'
        description: ''
      offers:
        type: array
        items:
          "$ref": '#/definitions/offer'
        description: ''
      sub_events:
        type: array
        items:
          type: string
        readOnly: true
        description: for aggregate events this contains references to all sub events. Usually this means that the sub events are part of series.
      custom_data:
        type: string
        description: Key value field for custom data. FIXME: is there 6Aika-wide use case for this?
      name:
        type: object
        description: This is currently generated combining head and secondary headline
        properties:
          fi:
            description: Name of the event in Finnish
            type: string
          se:
            description: Name of the event in Swedish
            type: string
          en:
            description: Name of the event in English
            type: string
      image:
        type: string
        description: ''
      origin_id:
        type: string
        description: ''
      created_time:
        type: string
        format: date-time
        description: ''
      last_modified_time:
        type: string
        format: date-time
        description: ''
      info_url:
        description: Link (URL) to a page with more information about event
        type: object
        properties:
          fi:
            description: Link to Finnish page
            type: string
            format: url
          se:
            description: Link to Swedish page
            type: string
            format: url
          en:
            description: Link to English page
            type: string
            format: url
      description:
        type: object
        properties:
          fi:
            description: Finnish description of the event
          se:
            description: Swedish description of the event
          en:
            description: English description of the event
      short_description:
        type: object
        properties:
          fi:
            description: short Finnish description of the event
          se:
            description: short Swedish description of the event
          en:
            description: short English description of the event
      date_published:
        type: string
        format: date-time
        description: ''
      headline:
        description: First level description
        type: object
        properties:
          fi:
            description: Finnish headline for the event
          se:
            description: Swedish headline for the event
          en:
            description: English headline for the event        
      secondary_headline:
        description: Second level description
        type: object
        properties:
          fi:
            description: secondary Finnish headline for the event
          se:
            description: secondary Swedish headline for the event
          en:
            description: secondary English headline for the event        
      provider:
        type: object
        properties:
          fi:
            description: provider name in Finnish for the event
          se:
            description: provider name in Swedish for the event
          en:
            description: provider name in English for the event
      location_extra_info:
        type: object
        description: Unstructured extra info about location (like "eastern door of railway station")
        properties:
          fi:
            description: location extra info in Finnish for the event
          se:
            description: location extra info in Swedish for the event
          en:
            description: location extra info in English for the event
      start_time:
        type: string
        format: date-time
        description: ''
      end_time:
        type: string
        format: date-time
        description: ''
      audience:
        type: string
        description: Target audience for the event (like social state, age, health). Might refer to keywords
      data_source:
        type: string
        description: ''
      created_by:
        type: string
        description: ''
      last_modified_by:
        type: string
        description: ''
      publisher:
        type: string
        description: ''
  offer:
    title: Price offers
    description: information record for this event. The prices are not in a structured format and the format depends on information source. An exception to this is the case of free event. These are indicated using is_free flag, which is searchable.
    type: object
    properties:
      price:
        type: object
        description: Price of the event. These are not bare numbers but instead descriptions of the pricing scheme.
        properties:
          fi:
            type: string
            description: Finnish translation for the price information
          sv:
            type: string
            description: Swedish translation for the price information
          en:
            type: string
            description: English translation for the price information
      info_url:
        description: Link (URL) to a page with more information about offer
        type: object
        properties:
          fi:
            description: Link to Finnish page
            type: string
            format: url
          se:
            description: Link to Swedish page
            type: string
            format: url
          en:
            description: Link to English page
            type: string
            format: url
      description:
        type: object
        description: Further description of the pricing
        properties:
          fi:
            type: string
            description: Finnish price description
          sv:
            type: string
            description: Swedish price description
          en:
            type: string
            description: English price description
      is_free:
        type: boolean
        description: Whether the event is of free admission
  
  eventlink:
    title: Links to related information
    description: Links to entities that the event publisher considers related to this event. Eg. links to catering service available during theatrical production. The links will most likely point to unstructured content, ie. web pages suitable for human viewing.
    type: object
    properties:
      name:
        type: string
        description: Name describing end contents of link.
      link:
        type: string
        description: link to an external related entity
      language:
        type: string
        description: language of the content behind the link
      event:
        type: string
        description: identifier of event the associated with this link. FIXME should be link for consistency

paths:
  /keyword/:
    get:
      summary: Returns list of keywords used for describing events
      operationId: keyword_list
      parameters:
        - name: event.data_source
          in: query
          type: string
          description: Only return keywords that are associated with an event by this data source.
        - $ref: '#/parameters/page_param'
        - $ref: '#/parameters/pagesize_param'
        
      responses:
        200:
          description: List of keywords
          schema:
            type: object
            properties:
              meta:
                $ref: '#/definitions/meta_definition'
              data:
                type: array
                items:
                  $ref: '#/definitions/keyword'
              
  /keyword/{id}/:
    get:
      summary: Return information for single keyword
      operationId: keyword_retrieve
      responses:
        200:
          description: Keyword record
          schema:
            $ref: '#/definitions/keyword'
      parameters:
      - type: string
        description: Same as id in keyword schema
        in: path
        name: id
        required: true
        
  /place/:
    get:
      summary: Returns list of places used for describing events
      operationId: place_list
      parameters:
        - name: event.data_source
          in: query
          type: string
          description: Only return keywords that are associated with an event by this data source.
        - $ref: '#/parameters/page_param'
        - $ref: '#/parameters/pagesize_param'
      responses:
        200:
          description: List of places
          schema:
            type: object
            properties:
              meta:
                $ref: '#/definitions/meta_definition'
              data:
                type: array
                items:
                  $ref: '#/definitions/place'

  /place/{id}/:
    get:
      summary: Return information for single place
      operationId: place_retrieve
      responses:
        200:
          description: Place record
          schema:
            $ref: '#/definitions/place'
      parameters:
      - type: string
        in: path
        name: id
        required: true
        description: Id as defined in place model

  /language/:
    get:
      summary: Return a list of languages used for describing events
      description: The returned list describes languages used for describing events in this Linked events instance
      operationId: language_list
      responses:
        200:
          description: Language list
          schema:
            type: object
            properties:
              meta:
                $ref: '#/definitions/meta_definition'
              data:
                type: array
                items:
                  $ref: '#/definitions/language'

  /language/{id}/:
    get:
      summary: Return information for single language
      description: Can be used to retrieve translations for a single language
      operationId: language_retrieve
      responses:
        200:
          description: Language record
          schema:
            $ref: '#/definitions/language'
      parameters:
      - type: string
        in: path
        name: id
        required: true

  /event/:
    get:
      summary: Return a list of events
      description: |-
        <h2 id="filtering-retrieved-events">Filtering retrieved events</h2>
        <p>Query parameters can be used to filter the retrieved events by
        the following criteria.</p>
        <h3 id="event-time">Event time</h3>
        <p>Use <code>start</code> and <code>end</code> to restrict the date range of returned events.
        Any events that intersect with the given date range will be returned.</p>
        <p>The parameters <code>start</code> and <code>end</code> can be given in the following formats:</p>
        <ul>
        <li>ISO 8601 (including the time of day)</li>
        <li>yyyy-mm-dd</li>
        </ul>
        <p>In addition, <code>today</code> can be used as the value.</p>
        <p>Example:</p>
        <pre><code>event/?start=2014-01-15&amp;end=2014-01-20
        </code></pre>
        <p><a href="?start=2014-01-15&amp;end=2014-01-20" title="json">See the result</a></p>
        <h3 id="event-location">Event location</h3>
        <h4 id="bounding-box">Bounding box</h4>
        <p>To restrict the retrieved events to a geographical region, use
        the query parameter <code>bbox</code> in the format</p>
        <pre><code>bbox=west,south,east,north
        </code></pre>
        <p>Where <code>west</code> is the longitude of the rectangle's western boundary,
        <code>south</code> is the latitude of the rectangle's southern boundary,
        and so on.</p>
        <p>Example:</p>
        <pre><code>event/?bbox=24.9348,60.1762,24.9681,60.1889
        </code></pre>
        <p><a href="?bbox=24.9348,60.1762,24.9681,60.1889" title="json">See the result</a></p>
        <h2 id="getting-detailed-data">Getting detailed data</h2>
        <p>In the default case, keywords, locations, and other fields that
        refer to separate resources are only displayed as simple references.</p>
        <p>If you want to include the complete data from related resources in
        the current response, use the keyword <code>include</code>. For example:</p>
        <pre><code>event/?include=location,keywords
        </code></pre>
        <p><a href="?include=location,keywords" title="json">See the result</a></p>
        <h2 id="response-data-for-the-current-url">Response data for the current URL</h2>
      operationId: Event_list
      responses:
        200:
          description: List of events
          schema:
            type: array
            items:
              $ref: '#/definitions/event'
      parameters:
      - name: start
        in: query
        type: string
        format: date-time
        description: Search for events beginning or ending after this time. Dates can be specified using ISO 8601 ("2016-01-12") and additionally "today".
      - name: end
        in: query
        type: string
        format: date-time
        description: Search for events beginning or ending before this time. Dates can be specified using ISO 8601 ("2016-01-12") and additionally "today".
      - name: bbox
        in: query
        type: array
        items:
          type: string
        minItems: 4
        maxItems: 4
        description: Search for events that are within this bounding box. Decimal coordinates are given in order west, south, east, north. Period is used as decimal separator.
      - name: include
        in: query
        type: array
        items:
          type: string
        description: Embed reference-type fields specified directly into the response, otherwise they are provided as URI references
      - name: publisher
        in: query
        type: string
        description: Filter by producers name
      - name: location
        in: query
        type: string
        description: Filter by event location id
      - name: keyword
        in: query
        type: string
        description: filter by keywords associated with the event. Keywords are identified by id, as returned by keyword endpoint
      - name: recurring
        in: query
        type: string
        enum:
          - super
          - sub
        description: only show super events or sub events. Only return aggregate events (super) or actual events (sub).
      - name: max_duration
        in: query
        type: integer
        description: maximum duration for event in seconds
      - name: min_duration
        in: query
        type: integer
        description: minimum duration for event in seconds
      - name: text
        in: query
        type: string
        description: 'Free text search through following fields: name, description, short_description, info_url. All versions of the field are considered.'
      - name: last_modified_since
        in: query
        type: string
        format: date-time
        description: return only results that have been modified after this date
    post:
      summary: Create a new event
      operationId: event_create
      responses:
        201:
          description: Object has been succesfully created. A copy of the object is returned in response body and headers contain Location pointing to the created event
          schema:
            $ref: '#/definitions/event'
        400:
          description: FIXME(missing) Something went wrong
        401:
          description: FIXME(missing) Something else went wrong
      parameters:
      - name: event_object
        in: body
        schema:
          $ref: '#/definitions/event'

  /event/{id}/:
    get:
      summary: Retrieve single event by id
      operationId: event_retrieve
      responses:
        200:
          description: Single event object
          schema:
            $ref: '#/definitions/event'
      parameters:
      - name: id
        in: path
        type: string
        description: Event identifier as defined in event schema
        required: true
    put:
      summary: Update an event
      description: Events can be updated if the user has appropriate access permissions. The original implementation behaves like PATCH, ie. if some field is left out from the PUT call, its value is retained in database. In order to ensure consistent behaviour, users should always supply every field in PUT call.
      operationId: event_update
      # FIXME, this is not a response, just a placeholder for schema 
      responses:
        200:
          description: Event has been succesfully replaced
          schema:
            $ref: '#/definitions/event'
      parameters:
      - type: string
        in: path
        name: id
        required: true
        description: Identifier for the event to be updated
      - name: event_object
        in: body
        description: Event object that should replace the existing event, note that some implementations may retain unspecified fields at their original values.
        schema:
          $ref: '#/definitions/event'
